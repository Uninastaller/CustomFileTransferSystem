Custom File Transfer System


Create certificate:
makecert -r -pe -n "CN=MyTestCertificate" -b 01/01/2010 -e 01/01/2030 -eku 1.3.6.1.5.5.7.3.1 -ss my -sr localMachine -sky exchange -sp "Microsoft RSA SChannel Cryptographic Provider" -sy 12 MyTestCertificate.cer -sv MyTestCertificate.pvk

Create trusted certificate for server:
makecert -r -pe -n "CN=MyTestCertificateServer" -b 01/01/2010 -e 01/01/2030 -eku 1.3.6.1.5.5.7.3.1 -ss root -sr localMachine -sky exchange -sp "Microsoft RSA SChannel Cryptographic Provider" -sy 12 MyTestCertificateServer.cer -sv MyTestCertificateServer.pvk

Create trusted certificate for client:
makecert -r -pe -n "CN=MyTestCertificateClient" -b 01/01/2010 -e 01/01/2030 -eku 1.3.6.1.5.5.7.3.2 -ss root -sr localMachine -sky exchange -sp "Microsoft RSA SChannel Cryptographic Provider" -sy 12 MyTestCertificateClient.cer -sv MyTestCertificateClient.pvk


Convert to PFX
pvk2pfx -pvk MyTestCertificateServer.pvk -spc MyTestCertificateServer.cer -pfx MyTestCertificateServer.pfx
pvk2pfx -pvk MyTestCertificateClient.pvk -spc MyTestCertificateClient.cer -pfx MyTestCertificateClient.pfx
Documentation:
https://learn.microsoft.com/en-us/windows/win32/seccrypto/makecert
https://blog.jayway.com/2014/09/03/creating-self-signed-certificates-with-makecert-exe-for-development/
https://github.com/chronoxor/NetCoreServer
https://www.youtube.com/watch?v=j9QmMEWmcfo



TOR CONTROL COMMANDS
https://gitweb.torproject.org/torspec.git/tree/control-spec.txt
GETCONF SocksPort
SETEVENTS CIRC
SIGNAL HEARTBEAT
GETINFO circuit-status
netstat -an
https://en.wikipedia.org/wiki/SOCKS
GETINFO stream-status







FILES SCHEME:

#region Properties



#endregion Properties

#region PublicFields


        
#endregion PublicFields

#region PrivateFields


        
#endregion PrivateFields

#region ProtectedFields



#endregion ProtectedFields

#region Ctor



#endregion Ctor

#region PublicMethods



#endregion PublicMethods

#region PrivateMethods



#endregion PrivateMethods

#region ProtectedMethods


        
#endregion ProtectedMethods

#region Events


        
#endregion Events

#region OverridedMethods


        
#endregion OverridedMethods

Numeric Data Types:

sbyte: 8-bit signed integer. Range: -128 to 127. Memory: 1 byte.
byte: 8-bit unsigned integer. Range: 0 to 255. Memory: 1 byte.
short (Int16): 16-bit signed integer. Range: -32,768 to 32,767. Memory: 2 bytes.
ushort (UInt16): 16-bit unsigned integer. Range: 0 to 65,535. Memory: 2 bytes.
int (Int32): 32-bit signed integer. Range: -2,147,483,648 to 2,147,483,647. Memory: 4 bytes.
uint (UInt32): 32-bit unsigned integer. Range: 0 to 4,294,967,295. Memory: 4 bytes.
long (Int64): 64-bit signed integer. Range: -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807. Memory: 8 bytes.
ulong (UInt64): 64-bit unsigned integer. Range: 0 to 18,446,744,073,709,551,615. Memory: 8 bytes.
float: 32-bit single-precision floating-point. Memory: 4 bytes.
double: 64-bit double-precision floating-point. Memory: 8 bytes.
decimal: 128-bit decimal. Precision: 28-29 significant digits. Memory: 16 bytes.
Character Data Types:

char: 16-bit Unicode character. Memory: 2 bytes.
Boolean Data Type:

bool: Represents true or false values. Memory: Typically 1 byte. 