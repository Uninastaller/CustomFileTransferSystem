CREATE TABLE "OfferingFiles" (
	"OfferingFileIdentificator"	TEXT NOT NULL UNIQUE,
	"FileName"	TEXT NOT NULL,
	"FileSize"	INTEGER NOT NULL,
	PRIMARY KEY("OfferingFileIdentificator")
);

CREATE TABLE "EndpointsAndGrades" (
    "Id"            INTEGER NOT NULL UNIQUE,
    "OfferingFileId"    TEXT NOT NULL,
    "Endpoint"      TEXT NOT NULL,
    "Grade"         INTEGER NOT NULL,
    PRIMARY KEY("Id"),
    UNIQUE("OfferingFileId", "Endpoint"), -- Define unique constraint
    FOREIGN KEY("OfferingFileId") REFERENCES "OfferingFiles"("OfferingFileIdentificator")
);

INSERT INTO "main"."OfferingFiles"
("OfferingFileIdentificator", "FileName", "FileSize")
VALUES ('ccc_789', 'ccc', 789);

INSERT INTO "main"."OfferingFiles"
("OfferingFileIdentificator", "FileName", "FileSize")
VALUES ('ddd_101112', 'ddd', 101112);

INSERT INTO "main"."EndpointsAndGrades"
("OfferingFileId", "Endpoint", "Grade")
VALUES ('ccc_789', '127.0.0.1:1234', 2);

INSERT INTO "main"."EndpointsAndGrades"
("OfferingFileId", "Endpoint", "Grade")
VALUES ('ddd_101112', '10.31.3.25:4321', 0);

INSERT INTO "main"."EndpointsAndGrades"
("OfferingFileId", "Endpoint", "Grade")
VALUES ('ccc_789', '196.168.0.120:4578', 3);

SELECT o.OfferingFileIdentificator, o.FileName, o.FileSize, e.Endpoint, e.Grade
            FROM OfferingFiles o
            LEFT JOIN EndpointsAndGrades e ON o.OfferingFileIdentificator = e.OfferingFileId

SELECT
    o.OfferingFileIdentificator,
    o.FileName,
    o.FileSize,
    CASE WHEN COUNT(e.Id) > 0 THEN json_group_object(e.Endpoint, e.Grade) ELSE NULL END AS EndpointsAndGradesJson
FROM OfferingFiles o
LEFT JOIN EndpointsAndGrades e ON o.OfferingFileIdentificator = e.OfferingFileId
GROUP BY o.OfferingFileIdentificator, o.FileName, o.FileSize;

INSERT OR REPLACE INTO EndpointsAndGrades (OfferingFileId, Endpoint, Grade) VALUES ("aaa_123", "127.0.0.1:12345", 0);




// nested datagrid for dictionary
<DataGrid Style="{DynamicResource DataGridStyle1}" 
          CellStyle="{DynamicResource DataGridCellStyle1}"
          ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
          RowStyle="{DynamicResource DataGridRowStyle1}"
          Grid.Column="2"
          x:Name="dtgOfferingFiles"
          d:ItemsSource="{d:SampleData ItemCount=4}">
              
    <DataGrid.Columns>
        <DataGridTextColumn Header="OfferingFileIdentificator" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding OfferingFileIdentificator}"/>
                                            <DataGridTextColumn Header="FileName" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileName}"/>
                                            <DataGridTextColumn Header="FileSize" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileSize}"/>
        
        <DataGridTemplateColumn Header="Operations" IsReadOnly="True" Width="auto">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Download identificator" Style="{StaticResource DataGridButtonStyle}" Click="btnDownloadOfferingFile_Click" Tag="{Binding}" x:Name="btnDownloadOfferingFile"/>
                    </StackPanel>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

        <!-- Column to show EndpointsAndGrades dictionary -->
        <DataGridTemplateColumn Header="EndpointsAndGrades" Width="auto">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <ListView ItemsSource="{Binding EndpointsAndGrades}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Endpoint" Width="100" DisplayMemberBinding="{Binding Path=Key}"/>
                                <GridViewColumn Header="Grade" Width="50" DisplayMemberBinding="{Binding Path=Value}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>

    </DataGrid.Columns>
</DataGrid>
