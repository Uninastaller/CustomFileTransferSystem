<model:BaseWindowForWPF x:Class="Client.Windows.MainWindow"
        xmlns:model="clr-namespace:Common.Model;assembly=Common"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Client" xmlns:common="clr-namespace:Common;assembly=Common"
                        mc:Ignorable="d"
        Title="MainWindow" 
        Height="600"
        Width="1500"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <!--#region ResizeGripStyle-->

        <Style x:Name="ResizeGripStyle" TargetType="{x:Type ResizeGrip}">
            <Setter Property="Margin"  Value="20"/>
        </Style>

        <!--#region ResizeGripStyle-->

    </Window.Resources>

    <Grid Margin="20">
        <Grid.Effect>
            <DropShadowEffect BlurRadius="30" ShadowDepth="2" Direction="-90" Color="Gray"/>
        </Grid.Effect>
        
        <Border CornerRadius="0" BorderThickness="10" BorderBrush="#453a26" MouseLeftButtonDown="Border_MouseLeftButtonDown">
            
            <Grid>

                <Button Style="{StaticResource CloseButtonStyle}" x:Name="btnClose" Content="" Click="btnClose_Click" Panel.ZIndex="1"
                VerticalAlignment="Top" HorizontalAlignment="Right"
                Height="25" Width="25"/>

                <Button Style="{StaticResource MaximizeButtonStyle}" x:Name="btnMaximize" Content="" Click="btnMaximize_Click" Panel.ZIndex="1"
                VerticalAlignment="Top" HorizontalAlignment="Right"
                Height="25" Width="25"
                Margin="0,0,25,0"/>

                <Button Style="{StaticResource MinimizeButtonStyle}" x:Name="btnMinimize" Content="" Click="btnMinimize_Click" Panel.ZIndex="1"
                VerticalAlignment="Top" HorizontalAlignment="Right"
                Height="25" Width="25"
                Margin="0,0,50,0"/>

                <Label Content="Client Application" HorizontalAlignment="Right" VerticalAlignment="Bottom" Panel.ZIndex="1"
               Height="24"
               FontFamily="Consolas"
               Foreground="Gray"
               FontWeight="Bold"/>

                <!--// Botton Menu panel //-->
                <Border VerticalAlignment="Bottom" HorizontalAlignment="Center" Background="Gray" CornerRadius="10,10,0,0" Height="20" Panel.ZIndex="1" Width="auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>

                        <Button Style="{StaticResource UploadingDirectoryButtonStyle}" x:Name="btnUploadingDirectory" Content="" Click="btnUploadingDirectory_Click" Grid.Column="1" Margin="0,0,0,0"
                            ToolTip="Open uploading directory"/>

                        <Button Style="{StaticResource DownloadingDirectoryButtonStyle}" x:Name="btnDownloadingDirectory" Content="" Click="btnDownloadingDirectory_Click" Grid.Column="2" Margin="0,0,0,0"
                            ToolTip="Open downloading directory"/>

                        <Button Style="{StaticResource SettingsButtonStyle}" x:Name="btnSettings" Content="" Click="btnSettings_Click" Grid.Column="3" Margin="0,0,0,0"
                            ToolTip="Open config file in notepad"/>

                    </Grid>
                </Border>

                <Border x:Name="brdSecond" CornerRadius="0" BorderThickness="20">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="#4e3926" Offset="0"/>
                            <GradientStop Color="#453a26" Offset=".33"/>
                            <GradientStop Color="#753b22" Offset=".66"/>
                            <GradientStop Color="#383838" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>

                    <Grid x:Name="gdMain">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="20"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#4e3926" Offset="0"/>
                                <GradientStop Color="#453a26" Offset=".33"/>
                                <GradientStop Color="#753b22" Offset=".66"/>
                                <GradientStop Color="#383838" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.Background>

                        <TextBlock x:Name="tbSuccessMessage"  Style="{StaticResource SuccessMessageStyle}" Grid.Row="12" Grid.Column="0" Grid.ColumnSpan="13" HorizontalAlignment="Center"
                                   Text="Operation Successful!" Foreground="{StaticResource TextColorDefault}" Visibility="Visible" Padding="20,0" Width="Auto"/>

                        <TextBlock Style="{DynamicResource TextBlockStyle1}" x:Name="tbTitle" Grid.Row="1" Grid.Column="1"
                           Text="Custom File Transfer System"
                           FontFamily="Arial"
                           FontSize="40"
                           FontWeight="Bold"
                           Grid.ColumnSpan="12"/>

                        <TabControl x:Name="tbMyTabControl" Style="{StaticResource TabControlStyle}" Grid.Row="2" Grid.Column="1" Grid.RowSpan="9" Grid.ColumnSpan="12">
                            <TabItem Style="{StaticResource TabItemStyle}" Header="Downloading">

                            <!--// Downloading TAB //-->
                                <Grid Margin="5,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" Background="{StaticResource TabItemButtonColorDefault}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                        </Grid.RowDefinitions>

                                        <Button Style="{StaticResource PauseButtonStyle}" x:Name="btnPauseDownload" Content="" Grid.Row="1" Margin="0,2,0,0" Height="30" Width="30"
                                                ToolTip="PauseDownload" Click="btnPauseDownload_Click"/>

                                    </Grid>

                                    <DataGrid Style="{StaticResource DataGridStyle1}" CellStyle="{StaticResource DataGridCellStyle1}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                                              Grid.Column="2"
                                              x:Name="dtgDownloading"
                                              d:ItemsSource="{d:SampleData ItemCount=4}">

                                        <DataGrid.RowDetailsTemplate>
                                            <DataTemplate>
                                                <ItemsControl ItemsSource="{Binding Clients}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="EndPoint:" Margin="5"/>
                                                                <TextBlock Text="{Binding Endpoint}" Margin="5"/>
                                                                <TextBlock Text="SocketType:" Margin="5"/>
                                                                <TextBlock Text="{Binding Type}" Margin="5"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </DataTemplate>
                                        </DataGrid.RowDetailsTemplate>
 
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="FileName" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileReceiver.FileName}"/>
                                            <DataGridTextColumn Header="TransferReceiveRate" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding TransferReceiveRateFormatedAsText}"/>
                                            <DataGridTextColumn Header="FileSize" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileReceiver.FileSize}"/>
                                            <DataGridTextColumn Header="TotalParts" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileReceiver.TotalParts}"/>
                                            <DataGridTextColumn Header="DownloadedParts" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileReceiver.NumberOfDownloadedParts}"/>
                                            <DataGridTemplateColumn Header="% Downloaded">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <ProgressBar Maximum="100" Minimum="0" Value="{Binding FileReceiver.PercentageDownload, Mode=OneWay}" 
                                                                         Foreground="Green" Opacity="0.5" />
                                                            <TextBlock Text="{Binding FileReceiver.PercentageDownload, StringFormat='{}{0}%'}" 
                                                                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTextColumn Header="DownloadingTime" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileReceiver.DownloadingTime}"/>
                                            <DataGridTextColumn Header="IsDownloading" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding IsDownloading}"/>
                                         
                                        </DataGrid.Columns>
                                    </DataGrid>

                                </Grid>

                            </TabItem>
                            
                            <!--// OFFERING FILES TAB //-->
                            
                            <TabItem Style="{StaticResource TabItemStyle}" Header="Offering Files">

                                <Grid Margin="5,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="*"/>                                        
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" Background="{StaticResource TabItemButtonColorDefault}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                        </Grid.RowDefinitions>

                                        <Button Style="{StaticResource DownloadButtonStyle}" x:Name="btnDownloadOfferingFilesFromCetnralServer" Content="" Grid.Row="3" Margin="0,2,0,0" Height="30" Width="30"
                                                ToolTip="Download Offering Files from Central Server" Click="btnDownloadOfferingFilesFromCetnralServer_Click"/>

                                        <Button Style="{StaticResource DownloadButtonStyle}" x:Name="btnUploadOfferingFilesToCentralServer" Content="" Grid.Row="1" Margin="0,2,0,0" Height="30" Width="30"
                                                ToolTip="Upload Offering Files to Central Server" Click="btnUploadOfferingFilesToCentralServer_Click" RenderTransformOrigin="0.5,0.5">                                            
                                            <Button.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform Angle="180"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Button.RenderTransform>
                                        </Button>
                                        
                                    </Grid>

                                    <DataGrid Style="{StaticResource DataGridStyle1}" CellStyle="{StaticResource DataGridCellStyle1}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                                              Grid.Column="2"
                                              x:Name="dtgOfferingFiles"
                                              d:ItemsSource="{d:SampleData ItemCount=4}">

                                        <DataGrid.RowDetailsTemplate>
                                            <DataTemplate>
                                                <ItemsControl ItemsSource="{Binding EndpointsAndProperties}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="EndPoint:" Margin="5"/>
                                                                <TextBlock Text="{Binding Key}" Margin="5"/>
                                                                <TextBlock Text="Health:" Margin="5"/>
                                                                <TextBlock Text="{Binding Value.Grade}" Margin="5"/>
                                                                <TextBlock Text="SocketType:" Margin="5"/>
                                                                <TextBlock Text="{Binding Value.TypeOfServerSocket}" Margin="5"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </DataTemplate>
                                        </DataGrid.RowDetailsTemplate>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="OfferingFileIdentificator" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding OfferingFileIdentificator}"/>
                                            <DataGridTextColumn Header="FileName" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileName}"/>
                                            <DataGridTextColumn Header="FileSize" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileSize}"/>

                                            <DataGridTemplateColumn Header="Operations" IsReadOnly="True" Width="auto">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Button Content="Save Identificator" Style="{StaticResource DataGridButtonStyle}" Click="btnSaveFileIdentificator_Click" Tag="{Binding}" x:Name="btnSaveFileIdentificator">
                                                                
                                                            </Button>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    
                                </Grid>
                                
                            </TabItem>

                            <!--// LOCA: OFFERING FILES TAB //-->

                            <TabItem Style="{DynamicResource TabItemStyle}" Header="Local Offering Files">

                                <Grid Margin="5,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" Background="{StaticResource TabItemButtonColorDefault}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                        </Grid.RowDefinitions>

                                        <Button Style="{StaticResource ReloadButtonStyle}" x:Name="btnReloadLocalOfferingFilesFile" Content="" Grid.Row="1" Margin="0,2,0,0" Height="30" Width="30"
                                            ToolTip="Reload offering filles from local files" Click="btnReloadLocalOfferingFilesFile_Click">
                                        </Button>

                                    </Grid>                                   

                                    <DataGrid Style="{StaticResource DataGridStyle1}" CellStyle="{StaticResource DataGridCellStyle1}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                                              Grid.Column="2"
                                              x:Name="dtgLocalOfferingFiles"
                                              d:ItemsSource="{d:SampleData ItemCount=4}">

                                        <DataGrid.RowDetailsTemplate>
                                            <DataTemplate>
                                                <ItemsControl ItemsSource="{Binding EndpointsAndProperties}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="EndPoint:" Margin="5"/>
                                                                <TextBlock Text="{Binding Key}" Margin="5"/>
                                                                <TextBlock Text="Health:" Margin="5"/>
                                                                <TextBlock Text="{Binding Value.Grade}" Margin="5"/>
                                                                <TextBlock Text="SocketType:" Margin="5"/>
                                                                <TextBlock Text="{Binding Value.TypeOfServerSocket}" Margin="5"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </DataTemplate>
                                        </DataGrid.RowDetailsTemplate>

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="OfferingFileIdentificator" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding OfferingFileIdentificator}"/>
                                            <DataGridTextColumn Header="FileName" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileName}"/>
                                            <DataGridTextColumn Header="FileSize" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileSize}"/>

                                            <DataGridTemplateColumn Header="Operations" IsReadOnly="True" Width="auto">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <Button Content="Delete Identificator" Style="{StaticResource DataGridButtonStyle}" Click="btnDeleteFileIdentificator_Click" Tag="{Binding}" x:Name="btnDeleteFileIdentificator"/>
                                                            <Button Content="Start Downloading" Style="{StaticResource DataGridButtonStyle}" Click="btnStartDownloading_Click" Tag="{Binding}" x:Name="btnStartDownloading"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                        </DataGrid.Columns>
                                    </DataGrid>

                                </Grid>

                            </TabItem>

                            <!--// UPLOADING SERVER SOCKET TAB //-->

                            <TabItem Style="{DynamicResource TabItemStyle}">
                                <TabItem.Header>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text=" Uploading Server Socket"/>
                                        <Ellipse x:Name="elpUploadingServerSocketState" Width="20" Height="20" Fill="#741b0c" Margin="5,5,0,0"/>
                                    </StackPanel>
                                </TabItem.Header>
                                <Grid Margin="5,0,0,0">
                                    
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" Background="{StaticResource TabItemButtonColorDefault}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="10"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="10"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="10"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="10"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="10"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Style="{StaticResource TextBlockStyle1}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                   Text="Soket Controls"
                                                   FontFamily="Arial"                           
                                                   FontSize="30"
                                                   FontWeight="ExtraBold"/>

                                        <common:CustomSwitchWithText x:Name="swchSocketDisposeState" LeftText="DISPOSED" RightText="CREATED" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Switched="swchSocketDisposeState_Switched" HorizontalAlignment="Center" Padding="0,0,0,0" ColorLeft="{StaticResource ToggleButtonEllipseOffColorARGB}" ColorRight="{StaticResource ToogleButtonEllipseOnColorARGB}"/>
                                        <common:CustomSwitchWithText x:Name="swchSocketState" LeftText="STOPPED" RightText="STARTED" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Switched="swchSocketState_Switched" HorizontalAlignment="Center" Padding="0,0,0,0" ColorLeft="{StaticResource ToggleButtonEllipseOffColorARGB}" ColorRight="{StaticResource ToogleButtonEllipseOnColorARGB}"/>
                                        <common:CustomSwitchWithText x:Name="swchSocketType" LeftText="TCP-SOCKET" RightText="SSL-SOCKET" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Switched="swchSocketType_Switched" HorizontalAlignment="Center" Padding="10,0,10,0" ColorLeft="{StaticResource ToggleButtonEllipseOffColorARGB}" ColorRight="{StaticResource ToogleButtonEllipseOnColorARGB}"/>

                                        <TextBlock Style="{StaticResource TextBlockStyle1}" x:Name="tbServerIpAddress" Grid.Row="8" Grid.Column="0" Text="IpAddress: " FontFamily="Arial" FontWeight="Bold" HorizontalAlignment="Right"/>
                                        <TextBlock Style="{StaticResource TextBlockStyle1}" x:Name="tbServerIpAddressVariable" Grid.Row="8" Grid.Column="1" Text="127.0.0.1" FontFamily="Arial" FontWeight="Bold" HorizontalAlignment="Left"/>

                                        <TextBlock Style="{StaticResource TextBlockStyle1}" x:Name="tbServerPort" Grid.Row="10" Grid.Column="0" Text="Port: " FontFamily="Arial" FontWeight="Bold" HorizontalAlignment="Right"/>
                                        <TextBlock Style="{StaticResource TextBlockStyle1}" x:Name="tbServerPortVariable" Grid.Row="10" Grid.Column="1" Text="12345" FontFamily="Arial" FontWeight="Bold" HorizontalAlignment="Left"/>

                                    </Grid>

                                    <DataGrid Style="{StaticResource DataGridStyle1}" CellStyle="{StaticResource DataGridCellStyle1}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                                              Grid.Column="2"
                                              x:Name="dtgUploadingSessions"
                                              d:ItemsSource="{d:SampleData ItemCount=4}">

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Id" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Id}"/>
                                            <DataGridTextColumn Header="FileNameOfAcceptedfileRequest" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding FileNameOfAcceptedfileRequest}"/>
                                            <DataGridTextColumn Header="SessionState" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding SessionState}"/>
                                            <DataGridTextColumn Header="DataSent" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding DataSendSentFormated}"/>
                                            <DataGridTextColumn Header="DataReceived" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding DataSendReceivedFormated}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>

                                </Grid>
                                
                            </TabItem>

                            <!--// NODE DISCOVERY TAB //-->

                            <TabItem Style="{StaticResource TabItemStyle}" Header="Nodes">

                                <Grid Margin="5,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" Background="{StaticResource TabItemButtonColorDefault}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                        </Grid.RowDefinitions>

                                        <Button Style="{StaticResource ReloadButtonStyle}" x:Name="btnReloadNodesFile" Content="" Grid.Row="3" Margin="0,2,0,0" Height="30" Width="30"
                                            ToolTip="Reload nodes from local file" Click="btnReloadNodesFile_Click">
                                        </Button>
                                        <Button Style="{StaticResource SynchronizeButtonStyle}" x:Name="btnNodeSynchronization" Content="" Grid.Row="1" Margin="0,2,0,0" Height="30" Width="30"
                                            ToolTip="Start Synchronization with all nodes" Click="btnNodeSynchronization_Click">
                                        </Button>
                                        <Button Style="{StaticResource MyNodeButtonStyle}" x:Name="btnMyNode" Content="" Grid.Row="5" Margin="0,2,0,0" Height="30" Width="30"
                                            ToolTip="My Node" Click="btnMyNode_Click">
                                        </Button>
                                        <Button Style="{StaticResource AddButtonStyle}" x:Name="btnAddNode" Content="" Grid.Row="7" Margin="0,2,0,0" Height="30" Width="30"
                                            ToolTip="Add node" Click="btnAddNode_Click">
                                        </Button>

                                    </Grid>

                                    <DataGrid Style="{StaticResource DataGridStyle1}" CellStyle="{StaticResource DataGridCellStyle1}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                                          Grid.Column="2"
                                          x:Name="dtgNodes"
                                          d:ItemsSource="{d:SampleData ItemCount=4}">

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="ID" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Id}"/>
                                            <DataGridTextColumn Header="IpAddress" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Address}"/>
                                            <DataGridTextColumn Header="Port" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Port}"/>
                                            <DataGridTextColumn Header="PublicKey" IsReadOnly="True" CanUserResize="False" Width="150" Binding="{Binding PublicKey}"/>
                                            <DataGridTemplateColumn Header="Active" IsReadOnly="True" CanUserResize="False" Width="auto">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Ellipse Width="20" Height="20" HorizontalAlignment="Center">
                                                            <Ellipse.Style>
                                                                <Style TargetType="Ellipse">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Active}" Value="True">
                                                                            <Setter Property="Fill" Value="#263F03"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Active}" Value="False">
                                                                            <Setter Property="Fill" Value="#741b0c"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Ellipse.Style>
                                                        </Ellipse>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                            <DataGridTemplateColumn Header="Operations" IsReadOnly="True" Width="auto">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <!--<Button Content="Node discovery" Style="{StaticResource DataGridButtonStyle}" Click="btnNodeDiscovery_Click" Tag="{Binding}" x:Name="btnNodeDiscovery">

                                                            </Button>-->
                                                            <Button Content="Modify" Style="{StaticResource DataGridButtonStyle}" Click="btnNodeModify_Click" Tag="{Binding}" x:Name="btnNodeModify"/>
                                                            <Button Content="Remove" Style="{StaticResource DataGridButtonStyle}" Click="btnNodeRemove_Click" Tag="{Binding}" x:Name="btnNodeRemove"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>

                                        </DataGrid.Columns>
                                    </DataGrid>

                                </Grid>

                            </TabItem>

                            <!--// REPLICA LOGS TAB //-->

                            <TabItem Style="{StaticResource TabItemStyle}" Header="Replica Logs">

                                <Grid Margin="5,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" Background="{StaticResource TabItemButtonColorDefault}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                        </Grid.RowDefinitions>

                                        <Button Style="{StaticResource ReloadButtonStyle}" x:Name="btnReloadReplicaLogs" Content="" Grid.Row="3" Margin="0,2,0,0" Height="30" Width="30"
                                            ToolTip="Reload replica logs from DB" Click="btnReloadReplicaLogs_Click">
                                        </Button>
                                        <!--<Button Style="{StaticResource SynchronizeButtonStyle}" x:Name="btnNodeSynchronization" Content="" Grid.Row="1" Margin="0,2,0,0" Height="30" Width="30"
                ToolTip="Start Synchronization with all nodes" Click="btnNodeSynchronization_Click">
                                        </Button>
                                        <Button Style="{StaticResource MyNodeButtonStyle}" x:Name="btnMyNode" Content="" Grid.Row="5" Margin="0,2,0,0" Height="30" Width="30"
                ToolTip="My Node" Click="btnMyNode_Click">
                                        </Button>
                                        <Button Style="{StaticResource AddButtonStyle}" x:Name="btnAddNode" Content="" Grid.Row="7" Margin="0,2,0,0" Height="30" Width="30"
                ToolTip="Add node" Click="btnAddNode_Click">
                                        </Button>

                                        <Button Style="{StaticResource AddButtonStyle}" x:Name="btnSendPbftRequest" Content="" Grid.Row="9" Margin="0,2,0,0" Height="30" Width="30"
                ToolTip="Send PBFT request" Click="btnSendPbftRequest_Click">
                                        </Button>-->

                                    </Grid>

                                    <DataGrid Style="{StaticResource DataGridStyle1}" CellStyle="{StaticResource DataGridCellStyle1}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                                      Grid.Column="2"
                                      x:Name="dtgReplicaLogs"
                                      d:ItemsSource="{d:SampleData ItemCount=4}">

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="ID" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Id}"/>
                                            <DataGridTextColumn Header="Time" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding TimeInCustomFormat}"/>
                                            <DataGridTextColumn Header="MessageType" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding MessageType}"/>
                                            <DataGridTextColumn Header="MessageDirection" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding MessageDirection}"/>
                                            <DataGridTextColumn Header="SynchronizationHash" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding SynchronizationHash}"/>
                                            <DataGridTextColumn Header="HashOfRequest" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding HashOfRequest}"/>
                                            <DataGridTextColumn Header="ReceiverId" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding ReceiverId}"/>
                                            <DataGridTextColumn Header="SenderId" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding SenderId}"/>
                                            <DataGridTextColumn Header="Message" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding Message}"/>

                                        </DataGrid.Columns>
                                    </DataGrid>

                                </Grid>

                            </TabItem>

                            <!--// BLOCKCHAIN TAB //-->

                            <TabItem Style="{StaticResource TabItemStyle}" Header="Blockchain">

                                <Grid Margin="5,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Column="0" Background="{StaticResource TabItemButtonColorDefault}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                            <RowDefinition Height="15"/>
                                            <RowDefinition Height="30"/>
                                        </Grid.RowDefinitions>

                                        <Button Style="{StaticResource ReloadButtonStyle}" x:Name="btnReloadBlockchain" Content="" Grid.Row="3" Margin="0,2,0,0" Height="30" Width="30"
                            ToolTip="Reload blockchain from DB" Click="btnReloadBlockchain_Click">
                                        </Button>
                                        <Button Style="{StaticResource AddButtonStyle}" x:Name="btnCreateBlockRequest" Content="" Grid.Row="1" Margin="0,2,0,0" Height="30" Width="30"
                            ToolTip="Create new request" Click="btnCreateBlockRequest_Click">
                        </Button>
                        <!--<Button Style="{StaticResource MyNodeButtonStyle}" x:Name="btnMyNode" Content="" Grid.Row="5" Margin="0,2,0,0" Height="30" Width="30"
ToolTip="My Node" Click="btnMyNode_Click">
                        </Button>
                        <Button Style="{StaticResource AddButtonStyle}" x:Name="btnAddNode" Content="" Grid.Row="7" Margin="0,2,0,0" Height="30" Width="30"
ToolTip="Add node" Click="btnAddNode_Click">
                        </Button>

                        <Button Style="{StaticResource AddButtonStyle}" x:Name="btnSendPbftRequest" Content="" Grid.Row="9" Margin="0,2,0,0" Height="30" Width="30"
ToolTip="Send PBFT request" Click="btnSendPbftRequest_Click">
                        </Button>-->

                                    </Grid>

                                    <DataGrid Style="{StaticResource DataGridStyle1}" CellStyle="{StaticResource DataGridCellStyle1}" ColumnHeaderStyle="{StaticResource DataGridColumnHeaderStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                                          Grid.Column="2"
                                          x:Name="dtgBlockchain"
                                          d:ItemsSource="{d:SampleData ItemCount=4}">

                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Index" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Index}"/>
                                            <DataGridTextColumn Header="Timestamp" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding Timestamp}"/>
                                            <DataGridTextColumn Header="FileHash" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding FileHash}"/>
                                            <DataGridTextColumn Header="FileSize" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding FileSize}"/>
                                            <DataGridTextColumn Header="FileID" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding FileID}"/>
                                            <DataGridTextColumn Header="FilLocations" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding FileLocationsInJsonFormat}"/>
                                            <DataGridTextColumn Header="Transaction" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding Transaction}"/>
                                            <DataGridTextColumn Header="Hash" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding Hash}"/>
                                            <DataGridTextColumn Header="PreviousHash" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding PreviousHash}"/>
                                            <DataGridTextColumn Header="NodeId" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding NodeId}"/>
                                            <DataGridTextColumn Header="CreditChange" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding CreditChange}"/>
                                            <DataGridTextColumn Header="NewCreditValue" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding NewCreditValue}"/>
                                            <DataGridTextColumn Header="SignedHash" IsReadOnly="True" CanUserResize="False" Width="auto" MaxWidth="150" Binding="{Binding SignedHash}"/>

                                        </DataGrid.Columns>
                                    </DataGrid>

                                </Grid>

                            </TabItem>

                        </TabControl>


                    </Grid>

                </Border>
            </Grid>
        </Border>
    </Grid>
</model:BaseWindowForWPF>
